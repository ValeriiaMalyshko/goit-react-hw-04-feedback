{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38097\\\\Documents\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.jsx\";\nimport { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport Section from './Section';\nimport Notification from './Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.setOption = option => {\n      this.setState(prevState => ({\n        [option]: prevState[option] + 1\n      }));\n    };\n  }\n\n  render() {\n    const options = Object.keys(this.state);\n    const countTotalFeedback = this.state(good + neutral + bad);\n    const countPositiveFeedbackPercentage = Math.round(this.state.good * 100 / countTotalFeedback);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        text: \"Please leave headback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: options,\n          onLeaveFeedback: this.setOption // onGood={this.goodIncrement}\n          // onNeutral={this.neutralIncrement}\n          // onBad={this.badIncrement}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), countTotalFeedback > 0 ? /*#__PURE__*/_jsxDEV(Section, {\n        text: \"Statistics\",\n        children: /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: countTotalFeedback,\n          positivePercentage: countPositiveFeedbackPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"There is no feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/38097/Documents/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["Component","FeedbackOptions","Statistics","Section","Notification","App","state","good","neutral","bad","setOption","option","setState","prevState","render","options","Object","keys","countTotalFeedback","countPositiveFeedbackPercentage","Math","round"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,OAAO,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADyB;;AAAA,SAOjCC,SAPiC,GAOrBC,MAAM,IAAI;AACpB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAAE,SAACF,MAAD,GAAUE,SAAS,CAACF,MAAD,CAAT,GAAoB;AAAhC,OAAL,CAAvB;AACD,KATgC;AAAA;;AAWjCG,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKX,KAAjB,CAAhB;AACA,UAAMY,kBAAkB,GAAG,KAAKZ,KAAL,CAAWC,IAAI,GAAGC,OAAP,GAAiBC,GAA5B,CAA3B;AACA,UAAMU,+BAA+B,GAAGC,IAAI,CAACC,KAAL,CACrC,KAAKf,KAAL,CAAWC,IAAX,GAAkB,GAAnB,GAA0BW,kBADY,CAAxC;AAGA,wBACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,uBAAd;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,OAAO,EAAEH,OADX;AAEE,UAAA,eAAe,EAAE,KAAKL,SAFxB,CAGE;AACA;AACA;;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAUGQ,kBAAkB,GAAG,CAArB,gBACC,QAAC,OAAD;AAAS,QAAA,IAAI,EAAC,YAAd;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAEX,IADR;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,GAAG,EAAEC,GAHP;AAIE,UAAA,KAAK,EAAES,kBAJT;AAKE,UAAA,kBAAkB,EAAEC;AALtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,gBAWC,QAAC,YAAD;AAAc,QAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA,oBADF;AA0BD;;AA3CgC","sourcesContent":["import { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport Section from './Section';\nimport Notification from './Notification';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  setOption = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n\n  render() {\n    const options = Object.keys(this.state);\n    const countTotalFeedback = this.state(good + neutral + bad);\n    const countPositiveFeedbackPercentage = Math.round(\n      (this.state.good * 100) / countTotalFeedback\n    );\n    return (\n      <>\n        <Section text=\"Please leave headback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.setOption}\n            // onGood={this.goodIncrement}\n            // onNeutral={this.neutralIncrement}\n            // onBad={this.badIncrement}\n          />\n        </Section>\n        {countTotalFeedback > 0 ? (\n          <Section text=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"There is no feedback\" />\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}